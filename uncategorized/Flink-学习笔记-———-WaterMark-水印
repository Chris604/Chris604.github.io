<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  

  
  <title>Flink 学习笔记 ——— WaterMark 水印 | Chris`s Blog</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="flink 简介 flink 是最近几年发展最为迅速的实时计算框架，它解决了 storm 低吞吐量的问题，同时也解决了 spark 的高延时问题。flink 是一款高吞吐量、低延时、高可用的流式计算框架。  flink 支持的窗口时间 事件时间：EventTime，事件发生的事件，通常是用户行为发生的最准确的事件。注入时间：IngestionTime，事件注入到 flink 框架的事件，是在 so">
<meta property="og:type" content="article">
<meta property="og:title" content="Flink 学习笔记 ——— WaterMark 水印">
<meta property="og:url" content="http:&#x2F;&#x2F;chris-liu.xyz&#x2F;uncategorized&#x2F;Flink-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E2%80%94%E2%80%94%E2%80%94-WaterMark-%E6%B0%B4%E5%8D%B0">
<meta property="og:site_name" content="Chris&#96;s Blog">
<meta property="og:description" content="flink 简介 flink 是最近几年发展最为迅速的实时计算框架，它解决了 storm 低吞吐量的问题，同时也解决了 spark 的高延时问题。flink 是一款高吞吐量、低延时、高可用的流式计算框架。  flink 支持的窗口时间 事件时间：EventTime，事件发生的事件，通常是用户行为发生的最准确的事件。注入时间：IngestionTime，事件注入到 flink 框架的事件，是在 so">
<meta property="og:locale" content="en">
<meta property="og:updated_time" content="2019-11-14T17:15:45.864Z">
<meta name="twitter:card" content="summary">
  
    <link rel="alternate" href="/atom.xml" title="Chris`s Blog" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  
    <link href="//fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet" type="text/css">
  
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">Chris`s Blog</a>
      </h1>
      
        <h2 id="subtitle-wrap">
          <a href="/" id="subtitle">这是一只飞不高的老鸟，但它从未放弃展翅飞翔...</a>
        </h2>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="Search"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://chris-liu.xyz"></form>
      </div>
    </div>
  </div>
</header>
      <div class="outer">
        <section id="main"><article id="page-Flink-学习笔记-———-WaterMark-水印" class="article article-type-page" itemscope itemprop="blogPost">
  <div class="article-meta">
    <a href="/uncategorized/Flink-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E2%80%94%E2%80%94%E2%80%94-WaterMark-%E6%B0%B4%E5%8D%B0" class="article-date">
  <time datetime="2019-11-14T16:11:37.000Z" itemprop="datePublished">2019-11-15</time>
</a>
    
  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      Flink 学习笔记 ——— WaterMark 水印
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <h4 id="flink-简介"><a href="#flink-简介" class="headerlink" title="flink 简介"></a>flink 简介</h4><ul>
<li>flink 是最近几年发展最为迅速的实时计算框架，它解决了 storm 低吞吐量的问题，同时也解决了 spark 的高延时问题。flink 是一款高吞吐量、低延时、高可用的流式计算框架。</li>
</ul>
<h4 id="flink-支持的窗口时间"><a href="#flink-支持的窗口时间" class="headerlink" title="flink 支持的窗口时间"></a>flink 支持的窗口时间</h4><blockquote>
<p>事件时间：EventTime，事件发生的事件，通常是用户行为发生的最准确的事件。<br>注入时间：IngestionTime，事件注入到 flink 框架的事件，是在 source 算子执行的时候生成的事件，通常是在 jobManager 服务器的系统时间。<br>处理时间：ProcessTime，事件处理的时间，通常是在 transform 过程中生成的时间戳，在 taskmanager 机器生成。  </p>
</blockquote>
<a id="more"></a>
<ul>
<li>为了更准确的反应用户行为分析结果，通常采用 EventTime 作为数据处理的的时间戳。然而，网络问题或者其他问题可能会引起数据的延时到来，如果按照 EventTime 去做处理，很可能得不到我们预期的结果，为了解决这种数据延时的问题，flink 中引入了 Watermark 水印去处理这种特殊情况。</li>
</ul>
<h4 id="Watermark-介绍"><a href="#Watermark-介绍" class="headerlink" title="Watermark 介绍"></a>Watermark 介绍</h4><ul>
<li>事实上，watermark 可以理解为是触发某个窗口执行的时间戳，它的生成有两种方式：1. Periodic（周期性），2. punctuated（伴随着每个最新的事件时间）。</li>
<li>它和事件流一样，可以在整个流中正常流转到下游对应的算子。</li>
<li>算子每接收到一个 watermark ，即可认为后面不会再有晚于这个时间戳的事件进入到该执行窗口中。</li>
<li>watermark 必须是递增的。</li>
<li>watermark 的生成离数据源越近越好。</li>
</ul>
<h4 id="watermark-源码"><a href="#watermark-源码" class="headerlink" title="watermark 源码"></a>watermark 源码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The &#123;<span class="doctag">@code</span> AssignerWithPeriodicWatermarks&#125; assigns event time timestamps to elements,</span></span><br><span class="line"><span class="comment"> * and generates low watermarks that signal event time progress within the stream.</span></span><br><span class="line"><span class="comment"> * These timestamps and watermarks are used by functions and operators that operate</span></span><br><span class="line"><span class="comment"> * on event time, for example event time windows.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Use this class to generate watermarks in a periodical interval.</span></span><br><span class="line"><span class="comment"> * At most every &#123;<span class="doctag">@code</span> i&#125; milliseconds (configured via</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> ExecutionConfig#getAutoWatermarkInterval()&#125;), the system will call the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> #getCurrentWatermark()&#125; method to probe for the next watermark value.</span></span><br><span class="line"><span class="comment"> * The system will generate a new watermark, if the probed value is non-null</span></span><br><span class="line"><span class="comment"> * and has a timestamp larger than that of the previous watermark (to preserve</span></span><br><span class="line"><span class="comment"> * the contract of ascending watermarks).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The system may call the &#123;<span class="doctag">@link</span> #getCurrentWatermark()&#125; method less often than every</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> i&#125; milliseconds, if no new elements arrived since the last call to the</span></span><br><span class="line"><span class="comment"> * method.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Timestamps and watermarks are defined as &#123;<span class="doctag">@code</span> longs&#125; that represent the</span></span><br><span class="line"><span class="comment"> * milliseconds since the Epoch (midnight, January 1, 1970 UTC).</span></span><br><span class="line"><span class="comment"> * A watermark with a certain value &#123;<span class="doctag">@code</span> t&#125; indicates that no elements with event</span></span><br><span class="line"><span class="comment"> * timestamps &#123;<span class="doctag">@code</span> x&#125;, where &#123;<span class="doctag">@code</span> x&#125; is lower or equal to &#123;<span class="doctag">@code</span> t&#125;, will occur any more.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt; The type of the elements to which this assigner assigns timestamps.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> org.apache.flink.streaming.api.watermark.Watermark</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AssignerWithPeriodicWatermarks</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">TimestampAssigner</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Returns the current watermark. This method is periodically called by the</span></span><br><span class="line"><span class="comment">	 * system to retrieve the current watermark. The method may return &#123;<span class="doctag">@code</span> null&#125; to</span></span><br><span class="line"><span class="comment">	 * indicate that no new Watermark is available.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;The returned watermark will be emitted only if it is non-null and its timestamp</span></span><br><span class="line"><span class="comment">	 * is larger than that of the previously emitted watermark (to preserve the contract of</span></span><br><span class="line"><span class="comment">	 * ascending watermarks). If the current watermark is still</span></span><br><span class="line"><span class="comment">	 * identical to the previous one, no progress in event time has happened since</span></span><br><span class="line"><span class="comment">	 * the previous call to this method. If a null value is returned, or the timestamp</span></span><br><span class="line"><span class="comment">	 * of the returned watermark is smaller than that of the last emitted one, then no</span></span><br><span class="line"><span class="comment">	 * new watermark will be generated.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;The interval in which this method is called and Watermarks are generated</span></span><br><span class="line"><span class="comment">	 * depends on &#123;<span class="doctag">@link</span> ExecutionConfig#getAutoWatermarkInterval()&#125;.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@see</span> org.apache.flink.streaming.api.watermark.Watermark</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@see</span> ExecutionConfig#getAutoWatermarkInterval()</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> Null&#125;, if no watermark should be emitted, or the next watermark to emit.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Nullable</span></span><br><span class="line">	<span class="function">Watermark <span class="title">getCurrentWatermark</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The &#123;<span class="doctag">@code</span> AssignerWithPunctuatedWatermarks&#125; assigns event time timestamps to elements,</span></span><br><span class="line"><span class="comment"> * and generates low watermarks that signal event time progress within the stream.</span></span><br><span class="line"><span class="comment"> * These timestamps and watermarks are used by functions and operators that operate</span></span><br><span class="line"><span class="comment"> * on event time, for example event time windows.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Use this class if certain special elements act as markers that signify event time</span></span><br><span class="line"><span class="comment"> * progress, and when you want to emit watermarks specifically at certain events.</span></span><br><span class="line"><span class="comment"> * The system will generate a new watermark, if the probed value is non-null</span></span><br><span class="line"><span class="comment"> * and has a timestamp larger than that of the previous watermark (to preserve</span></span><br><span class="line"><span class="comment"> * the contract of ascending watermarks).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;For use cases that should periodically emit watermarks based on element timestamps,</span></span><br><span class="line"><span class="comment"> * use the &#123;<span class="doctag">@link</span> AssignerWithPeriodicWatermarks&#125; instead.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;The following example illustrates how to use this timestamp extractor and watermark</span></span><br><span class="line"><span class="comment"> * generator. It assumes elements carry a timestamp that describes when they were created,</span></span><br><span class="line"><span class="comment"> * and that some elements carry a flag, marking them as the end of a sequence such that no</span></span><br><span class="line"><span class="comment"> * elements with smaller timestamps can come anymore.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;&#123;<span class="doctag">@code</span></span></span><br><span class="line"><span class="comment"> * public class WatermarkOnFlagAssigner implements AssignerWithPunctuatedWatermarks&lt;MyElement&gt; &#123;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     public long extractTimestamp(MyElement element, long previousElementTimestamp) &#123;</span></span><br><span class="line"><span class="comment"> *         return element.getSequenceTimestamp();</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     public Watermark checkAndGetNextWatermark(MyElement lastElement, long extractedTimestamp) &#123;</span></span><br><span class="line"><span class="comment"> *         return lastElement.isEndOfSequence() ? new Watermark(extractedTimestamp) : null;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> * &#125;&lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Timestamps and watermarks are defined as &#123;<span class="doctag">@code</span> longs&#125; that represent the</span></span><br><span class="line"><span class="comment"> * milliseconds since the Epoch (midnight, January 1, 1970 UTC).</span></span><br><span class="line"><span class="comment"> * A watermark with a certain value &#123;<span class="doctag">@code</span> t&#125; indicates that no elements with event</span></span><br><span class="line"><span class="comment"> * timestamps &#123;<span class="doctag">@code</span> x&#125;, where &#123;<span class="doctag">@code</span> x&#125; is lower or equal to &#123;<span class="doctag">@code</span> t&#125;, will occur any more.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt; The type of the elements to which this assigner assigns timestamps.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> org.apache.flink.streaming.api.watermark.Watermark</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AssignerWithPunctuatedWatermarks</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">TimestampAssigner</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Asks this implementation if it wants to emit a watermark. This method is called right after</span></span><br><span class="line"><span class="comment">	 * the &#123;<span class="doctag">@link</span> #extractTimestamp(Object, long)&#125; method.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;The returned watermark will be emitted only if it is non-null and its timestamp</span></span><br><span class="line"><span class="comment">	 * is larger than that of the previously emitted watermark (to preserve the contract of</span></span><br><span class="line"><span class="comment">	 * ascending watermarks). If a null value is returned, or the timestamp of the returned</span></span><br><span class="line"><span class="comment">	 * watermark is smaller than that of the last emitted one, then no new watermark will</span></span><br><span class="line"><span class="comment">	 * be generated.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * &lt;p&gt;For an example how to use this method, see the documentation of</span></span><br><span class="line"><span class="comment">	 * &#123;<span class="doctag">@link</span> AssignerWithPunctuatedWatermarks this class&#125;.</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> Null&#125;, if no watermark should be emitted, or the next watermark to emit.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Nullable</span></span><br><span class="line">	<span class="function">Watermark <span class="title">checkAndGetNextWatermark</span><span class="params">(T lastElement, <span class="keyword">long</span> extractedTimestamp)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>通过源码可以看到，我们可以实现接口根据事件事件获取watermark时间戳。</li>
</ul>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul>
<li>watermark 可以在一定程度上解决数据延迟的问题，然而在延迟事件较长时，这种机制似乎也显得苍白无力。此时，我们可以利用窗口的 allowedLateness 方法设置允许延迟的时间差，查过该事件的数据将会被丢弃。</li>
</ul>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://chris-liu.xyz/uncategorized/Flink-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E2%80%94%E2%80%94%E2%80%94-WaterMark-%E6%B0%B4%E5%8D%B0" data-id="ck2yzb7pg0000xz22h9eu07y8" class="article-share-link">Share</a>
      
      
    </footer>
  </div>
  
    
  
</article>

</section>
        
          <aside id="sidebar">
  
    

  
    

  
    
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Archives</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/11/">November 2019</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Recent Posts</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/uncategorized/Flink-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E2%80%94%E2%80%94%E2%80%94-WaterMark-%E6%B0%B4%E5%8D%B0">Flink 学习笔记 ——— WaterMark 水印</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      &copy; 2019 Chris Liu<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>
    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>


<script src="/js/script.js"></script>



  </div>
</body>
</html>